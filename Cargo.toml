[package]
name = "noiz"
version = "0.1.0"
edition = "2024"

[dependencies]
bevy_math = { version = "0.16.0-rc.3", default-features = false, features = [
  "curve",
] }

[dev-dependencies]
# for examples
bevy = "0.16.0-rc.3"

# For benches
criterion = "0.5"
fastnoise-lite = "1.1"
noise = "0.9"
libnoise = "1.1"

[features]
default = ["std"]

std = ["bevy_math/std"]
libm = ["bevy_math/libm"]
nostd-libm = ["bevy_math/nostd-libm"]

[profile.dev]
opt-level = 3

[profile.test]
opt-level = 1

[lints.clippy]
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
semicolon_if_nothing_returned = "warn"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"
needless_lifetimes = "allow"
too_many_arguments = "allow"
nonstandard_macro_braces = "warn"

ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
ref_as_ptr = "warn"

too_long_first_doc_paragraph = "allow"

std_instead_of_core = "warn"
std_instead_of_alloc = "warn"
alloc_instead_of_core = "warn"

allow_attributes = "warn"
allow_attributes_without_reason = "warn"

[lints.rust]
missing_docs = "warn"
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(docsrs_dep)'] }
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

# [[example]]
# name = "show_noise"
# path = "examples/show_noise.rs"

# [[bench]]
# name = "compare"
# path = "benches/compare/main.rs"
# harness = false
